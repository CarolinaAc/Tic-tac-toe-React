{"version":3,"sources":["Square.js","Board.js","Winner.js","Game.js","index.js"],"names":["Square","props","className","onClick","value","Board","i","key","this","squares","n","push","renderSquare","renderSquares","renderRows","React","Component","calculateWinner","lines","length","a","b","c","Game","state","history","Array","fill","xIsNext","stepNumber","slice","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"oOAaeA,EAXA,SAACC,GACZ,OACI,4BACIC,UAAU,SACVC,QAASF,EAAME,SACdF,EAAMG,QCgCJC,E,qLAlCEC,GAAI,IAAD,OACd,OACE,kBAAC,EAAD,CACMC,IAAK,UACFD,EACHF,MAAOI,KAAKP,MAAMQ,QAAQH,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,oCAK9BI,GAEZ,IADA,IAAID,EAAU,GACLH,EAAII,EAAGJ,EAAII,EAAI,EAAGJ,IACzBG,EAAQE,KAAKH,KAAKI,aAAaN,IAEjC,OAAOG,I,iCAGEH,GACT,OAAO,yBAAKJ,UAAU,aAAaM,KAAKK,cAAcP,M,+BAGtD,OACE,6BACGE,KAAKM,WAAW,GAChBN,KAAKM,WAAW,GAChBN,KAAKM,WAAW,Q,GA7BPC,IAAMC,W,OCkBXC,MApBf,SAAyBR,GAWrB,IAVA,IAAMS,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CAAC,IAAD,cACnBY,EAAMZ,GADa,GAC9Bc,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIb,EAAQW,IAAMX,EAAQW,KAAOX,EAAQY,IAAMZ,EAAQW,KAAOX,EAAQa,GACpE,OAAOb,EAAQW,GAGnB,OAAO,MC0DIG,E,YAvEf,WAAYtB,GAAQ,IAAD,8BACf,4CAAMA,KACDuB,MAAQ,CACTC,QAAS,CAAC,CACNhB,QAASiB,MAAM,GAAGC,KAAK,QAE3BC,SAAS,EACTC,WAAY,GAPD,E,yEAWPvB,GACR,IAAMmB,EAAUjB,KAAKgB,MAAMC,QAAQK,MAAM,EAAGtB,KAAKgB,MAAMK,WAAa,GAE9DpB,EADUgB,EAAQA,EAAQN,OAAS,GACjBV,QAAQqB,QAC5Bb,EAAgBR,IAAYA,EAAQH,KAExCG,EAAQH,GAAKE,KAAKgB,MAAMI,QAAU,IAAM,IACxCpB,KAAKuB,SAAS,CACVN,QAASA,EAAQO,OAAO,CAAC,CACrBvB,QAASA,KAEboB,WAAYJ,EAAQN,OACpBS,SAAUpB,KAAKgB,MAAMI,a,6BAItBK,GACHzB,KAAKuB,SAAS,CACVF,WAAYI,EACZL,QAAUK,EAAO,IAAO,M,+BAItB,IAgBFC,EAhBC,OACCT,EAAUjB,KAAKgB,MAAMC,QACrBU,EAAUV,EAAQjB,KAAKgB,MAAMK,YAC7BO,EAASnB,EAAgBkB,EAAQ1B,SAEjC4B,EAAQZ,EAAQa,KAAI,SAACL,EAAMM,GAC7B,IAAMC,EAAOD,EAAO,eAAiBA,EACrC,mBACA,OACI,wBAAIhC,IAAKgC,GACL,4BACApC,QAAS,kBAAM,EAAKsC,OAAOF,KAAQC,OAQ/C,OAFSN,EAATE,EAAkB,WAAaA,EAAkB,iBAAmB5B,KAAKgB,MAAMI,QAAU,IAAM,KAG/F,yBAAK1B,UAAU,QACX,yBAAKA,UAAU,SAAf,eACA,yBAAKA,UAAU,cACf,kBAAC,EAAD,CACIO,QAAS0B,EAAQ1B,QACjBN,QAAS,SAACG,GAAD,OAAO,EAAKoC,YAAYpC,OAGrC,yBAAKJ,UAAU,aACf,6BAAOgC,GACP,4BAAKG,S,GAjEMtB,IAAMC,WCCzB2B,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,U","file":"static/js/main.55afa9e0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Square = (props) => {\r\n    return (\r\n        <button\r\n            className=\"square\"\r\n            onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    )\r\n}\r\n  \r\n\r\nexport default Square","import React from \"react\"\r\nimport Square from \"./Square\"\r\n\r\nclass Board extends React.Component {          \r\n    \r\n    renderSquare(i) {\r\n      return (\r\n        <Square\r\n              key={\"square \"\r\n               + i}\r\n              value={this.props.squares[i]}\r\n              onClick={() => this.props.onClick(i)}\r\n          />\r\n      );\r\n    }\r\n\r\n    renderSquares(n) {\r\n      let squares = []\r\n      for (let i = n; i < n + 3; i++) {\r\n        squares.push(this.renderSquare(i))\r\n      }\r\n      return squares;\r\n    }\r\n    \r\n    renderRows(i) {\r\n      return <div className=\"board-row\">{this.renderSquares(i)}</div>\r\n    }\r\n    render (){\r\n      return (\r\n        <div>\r\n          {this.renderRows(0)}\r\n          {this.renderRows(3)}\r\n          {this.renderRows(6)}\r\n        </div>\r\n      );\r\n    }\r\n        //fix this as onclick rendering only top row\r\n    }\r\n\r\nexport default Board","\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\nexport default calculateWinner","import React from 'react'\r\nimport Board from './Board'\r\nimport calculateWinner from \"./Winner\"\r\n\r\nclass Game extends React.Component {\r\nconstructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        history: [{\r\n            squares: Array(9).fill(null)\r\n        }],\r\n        xIsNext: true,\r\n        stepNumber: 0\r\n    }\r\n}\r\n\r\nhandleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1)\r\n    const current = history[history.length - 1]\r\n    const squares = current.squares.slice()\r\n    if (calculateWinner(squares) || squares[i]){ return }\r\n    \r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\"\r\n    this.setState({\r\n        history: history.concat([{\r\n            squares: squares, \r\n        }]),\r\n        stepNumber: history.length,\r\n        xIsNext: !this.state.xIsNext\r\n    })\r\n}\r\n\r\njumpTo(step) {\r\n    this.setState({\r\n        stepNumber: step,\r\n        xIsNext: (step % 2) === 0\r\n    })\r\n}\r\n\r\nrender() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber]\r\n    const winner = calculateWinner(current.squares)\r\n\r\n    const moves = history.map((step, move) => {\r\n        const desc = move ? \"Go to move #\" + move :\r\n        \"Go to game start\"\r\n        return (\r\n            <li key={move}>\r\n                <button \r\n                onClick={() => this.jumpTo(move)}>{desc}</button>\r\n            </li>\r\n        )\r\n    })\r\n\r\n    let status;\r\n    winner ? status = \"Winner: \" + winner : status = \"Next Player: \" + (this.state.xIsNext ? \"X\" : \"O\")\r\n    \r\n    return (\r\n    <div className=\"game\">\r\n        <div className=\"title\">TIC TAC TOE</div>\r\n        <div className=\"game-board\">\r\n        <Board \r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n            />\r\n        </div>\r\n        <div className=\"game-info\">\r\n        <div>{ status }</div>\r\n        <ol>{moves}</ol>\r\n        </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index2.css';\r\nimport Game from \"./Game\"\r\n\r\nReactDOM.render(<Game />, document.getElementById('root')\r\n  );\r\n  "],"sourceRoot":""}